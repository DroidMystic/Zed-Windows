name: Build and Release Zed IDE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    name: Build
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install Dependencies
      run: |
        choco install dotnetcore-sdk --version=8.0 -y
        choco install visualstudio2019buildtools -y
        choco install rustup.install -y

    - name: Install and Setup Rust
      shell: powershell
      run: |
        rustup update
        rustup default stable
        rustup target add wasm32-unknown-unknown

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Clone and Build Zed IDE
      run: |
        git clone https://github.com/zed-industries/zed
        cd zed
        npm install
        npm run build
        cargo build --release

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: zed-ide-build
        path: zed/target/release/zed.exe

  release:
    name: Create Release
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' || (github.event_name == 'release' && github.event.action == 'created')
    
    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: zed-ide-build

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Zed IDE v${{ github.run_number }}
        tag_name: v${{ github.run_number }}
        body: |
          Automated build of Zed IDE
          - Build number: ${{ github.run_number }}
          - Commit: ${{ github.sha }}
        draft: false
        prerelease: false
        files: zed.exe
